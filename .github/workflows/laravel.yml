name: Laravel CI

on:
  push:
    paths-ignore:
      - 'docs/**'

jobs:
  laravel-ci:
    name: Laravel (PHP ${{ matrix.php-version }} on ${{ matrix.operating-system }})
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-latest, windows-latest]
        php-version: ['7.3', '7.4']
    env:
      DB_CONNECTION: sqlite
      DB_DATABASE: database/database.sqlite
    steps:
      - name: Checkout source
        uses: actions/checkout@v1

      - name: Setup PHP Action
        uses: shivammathur/setup-php@1.7.0
        with:
          php-version: ${{ matrix.php-version }}
          tools: phpunit
          coverage: xdebug
          extensions: curl, fileinfo, intl, mbstring, openssl, pdo_sqlite, zip

      - name: Create Database (Linux)
        if: runner.OS == 'Linux'
        run: |
          mkdir -p database
          touch database/database.sqlite

      - name: Create Database (Windows)
        if: runner.OS == 'Windows'
        run: |
          mkdir -p database -f
          echo $null >> database/database.sqlite

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Cache PHP Dependencies
        uses: actions/cache@v1
        with:
          path: vendor
          key: ${{ runner.OS }}-build-${{ hashFiles('**/composer.lock') }}

      - name: Install PHP Dependencies
        run: composer install --no-interaction --no-progress --no-suggest --prefer-dist

      - name: Cache NPM Dependencies
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.OS }}-build-${{ hashFiles('**/yarn.lock') }}

      - name: Install NPM Dependencies
        run: yarn install --frozen-lockfile --non-interactive

      - name: Generate key
        run: php artisan key:generate --no-interaction --force

      - name: Generate JWT secret
        run: php artisan jwt:secret --no-interaction --force

      - name: Migrate Database
        run: php artisan migrate --force

      - name: Build Frontend Scaffolding
        run: yarn run production --non-interactive

      - name: Execute tests (Unit and Feature tests) via PHPUnit
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: vendor/bin/phpunit --coverage-text

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: logs
          path: storage/logs/
